@startuml kubernetes

' footer Déploiement Kafka avec Zookeeper

'skinparam nodesep 10
'skinparam ranksep 10

!define KubernetesPuml https://raw.githubusercontent.com/dcasati/kubernetes-PlantUML/master/dist

!includeurl KubernetesPuml/kubernetes_Common.puml
!includeurl KubernetesPuml/kubernetes_Context.puml
!includeurl KubernetesPuml/kubernetes_Simplified.puml

!includeurl KubernetesPuml/OSS/KubernetesSvc.puml
!includeurl KubernetesPuml/OSS/KubernetesCrd.puml
!includeurl KubernetesPuml/OSS/KubernetesIng.puml
!includeurl KubernetesPuml/OSS/KubernetesPod.puml
!includeurl KubernetesPuml/OSS/KubernetesRs.puml
!includeurl KubernetesPuml/OSS/KubernetesDeploy.puml
!includeurl KubernetesPuml/OSS/KubernetesHpa.puml
!includeurl KubernetesPuml/OSS/KubernetesNode.puml

left to right direction

Namespace_Boundary(ns, "my-app") {

    KubernetesCrd(kafka, "Kafka CRD", "")

    Cluster_Boundary(region1, "Région A") {
        KubernetesPod(kafka1, "kafka 1", "")
        KubernetesPod(kafka2, "kafka 2", "")
        KubernetesPod(zookeeper1, "zookeeper 1", "")
        KubernetesPod(zookeeper2, "zookeeper 2", "")
    }

    Cluster_Boundary(region2, "Région B") {
        KubernetesPod(kafka3, "kafka 3", "")
        KubernetesPod(kafka4, "kafka 4", "")
        KubernetesPod(zookeeper3, "zookeeper 3", "")
    }
}

kafka -> region1: ""
kafka ---> region2: ""

@enduml